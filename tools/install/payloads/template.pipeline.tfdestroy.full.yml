################################################################################################################################################
#
# WARNING: This is an autogenerated file. If you need to make changes, please make the changes to the template.pipline.tfdestroy.full.yml file 
# under Terraform-Pipelines/tools/install/payloads/
#
################################################################################################################################################
name: $(BuildDefinitionName).$(DayOfYear)$(Rev:.r)

trigger: none

pool:
  vmImage: 'ubuntu-latest'

resources:
  repositories:
  - repository: Terraform-Code
    type: git
    name: Terraform-Code
    ref: 'refs/heads/master'

variables:
  - group: tool_versions
  - name: runPipelinesServiceConnection
    value: "sc-ado"
  - name: workDir
    value: "$(System.DefaultWorkingDirectory)/terraform"
  - name: FULL_DEPLOYMENT
    value: true
  - name: TfDestroyPipelineFolderPath
    value: "\\infrastructure\\shared"  
  - name: TfDestroyPipelineName
    value: "tfdestroy"      

jobs:
- template: ./templates/template.job.gitdiff.yml
  parameters:
    baseBranch: "master"
    compareBranch: "$(Build.SourceBranch)"
      
- job: RunDestroyJobs
  dependsOn: gitDiff
  displayName: Running - 
  pool: { vmImage: ubuntu-latest }
  variables:
    deploymentJson: $[ dependencies.gitDiff.outputs['gitDiff.DEPLOYMENTSJSON'] ]  
  strategy:
    matrix: 
__MATRIX_CONTENT__

    maxParallel: 1

  steps:
  - script: |
        deployment=`echo $(deployments) | jq -c -r '.[] | select(.layer == "'"$(layer)"'") | .deployments'`
        deploymentRaw=`echo $(deployments)`
        
        echo "layer: $(layer)"
        echo "deploymentRaw: $deploymentRaw"
        echo "deployment: $deployment"
        echo "##vso[task.setvariable variable=runPipelinesBuildParameters]$deployment"
  - task: RunPipelines@2
    inputs:
      serviceConnection: '$(runPipelinesServiceConnection)'
      project: '$(System.TeamProject)'
      folderPath: '$(TfDestroyPipelineFolderPath)'
      buildDefinition: '$(TfDestroyPipelineName)'
      targetType: 'inline'
      buildParameters: '$(runPipelinesBuildParameters)'
      customPrefix: 'TFDestroy-$(layer)'
      waitForQueuedBuildsToFinish: true
      waitRefreshTime: '15'
      waitTimeOut: '60'
      storeInOutputVariable: false

